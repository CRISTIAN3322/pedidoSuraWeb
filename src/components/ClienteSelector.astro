---
import clientes from "../data/clientes.json";
import cupos from "../data/cupo.json";
import cartera from "../data/cartera.json";
---

<div class="cliente-selector">
    <input
        type="text"
        placeholder="Buscar Cliente..."
        id="searchInput"
        class="input-busqueda"
    />

    <ul class="lista-clientes" id="listaClientes"></ul>

    <div class="sucursales" id="sucursalesContainer" style="display: none;">
        <h3 id="clienteSeleccionadoNombre"></h3>
        <p id="clienteCupo" class="cupo-cliente"></p>
        <ul class="lista-sucursales" id="listaSucursales"></ul>
        <div id="datosSeleccionados" class="datos-seleccionados" style="display: none;">
            <h4>Datos Seleccionados:</h4>
            <p id="clienteNombre"></p>
            <p id="sucursalDireccion"></p>
            <p id="sucursalVendedor"></p>
        </div>
        
        <!-- Tabla de cartera justo antes del botón -->
        <div class="tabla-cartera" id="tablaCartera" style="display: none;">
            <h4>Cartera del Cliente</h4>
            <table>
                <thead>
                    <tr>
                        <th>Factura</th>
                        <th>Fecha</th>
                        <th>Valor</th>
                        <th>Días</th>
                    </tr>
                </thead>
                <tbody id="carteraTableBody"></tbody>
                <tfoot id="carteraTableFoot" style="display: none;">
                    <tr>
                        <td colspan="2"><strong>Total Cartera:</strong></td>
                        <td id="totalCartera" colspan="2"><strong>$0</strong></td>
                    </tr>
                </tfoot>
            </table>
        </div>
        
        <button id="irAlCarrito" class="boton-carrito" style="display: none;">
            Ir al Carrito
        </button>
    </div>

    <textarea
        rows="4"
        id="resultadoTextarea"
        class="textarea-resultado"
        readonly
        placeholder="Selecciona un cliente y una sucursal"
    ></textarea>
</div>

<script define:vars={{ clientes, cupos, cartera }}>
    // Datos iniciales
    const clientesData = clientes;
    const cuposData = cupos;
    let clienteSeleccionado = null;
    let sucursalSeleccionada = null;

    // Elementos del DOM
    const searchInput = document.getElementById('searchInput');
    const listaClientes = document.getElementById('listaClientes');
    const sucursalesContainer = document.getElementById('sucursalesContainer');
    const clienteSeleccionadoNombre = document.getElementById('clienteSeleccionadoNombre');
    const clienteCupo = document.getElementById('clienteCupo');
    const listaSucursales = document.getElementById('listaSucursales');
    const resultadoTextarea = document.getElementById('resultadoTextarea');

    // Función de búsqueda
    function buscarClientes(query) {
        if (query.length < 1) {
            listaClientes.innerHTML = '';
            return;
        }
        
        const resultados = clientesData.filter(cliente => 
            cliente.nombre.toLowerCase().includes(query.toLowerCase()) ||
            cliente.id.toString().includes(query)
        );
        mostrarResultados(resultados);
    }

    // Mostrar resultados de búsqueda
    function mostrarResultados(clientes) {
        listaClientes.innerHTML = '';
        clientes.forEach(cliente => {
            const li = document.createElement('li');
            li.className = 'cliente-item';
            li.textContent = cliente.nombre;
            li.dataset.clienteId = cliente.id.toString();
            li.onclick = () => seleccionarCliente(cliente);
            listaClientes.appendChild(li);
        });
    }

    // Seleccionar cliente
    function seleccionarCliente(cliente) {
        clienteSeleccionado = cliente;
        sucursalSeleccionada = null;
        clienteSeleccionadoNombre.textContent = `Sucursales de ${cliente.nombre}:`;
        
        // Mostrar el cupo del cliente
        const cupoInfo = cuposData.find(c => c.id === cliente.id);
        if (cupoInfo) {
            clienteCupo.textContent = `Cupo disponible: $${cupoInfo.cupo}`;
            clienteCupo.style.display = 'block';
        } else {
            clienteCupo.textContent = 'Cupo no disponible';
            clienteCupo.style.display = 'block';
        }

        // Mostrar la cartera del cliente
        const carteraCliente = cartera.filter(c => c.id === cliente.id);
        const tablaCartera = document.getElementById('tablaCartera');
        const carteraTableBody = document.getElementById('carteraTableBody');
        
        if (carteraCliente.length > 0) {
            carteraTableBody.innerHTML = '';
            let totalCartera = 0;
            
            carteraCliente.forEach(factura => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${factura.fac}</td>
                    <td>${factura.fecha}</td>
                    <td>$${factura.valor}</td>
                    <td>${factura.dias}</td>
                `;
                
                // Agregar clases para resaltar filas según los días
                const dias = parseInt(factura.dias);
                console.log('Días:', factura.dias, 'Tipo:', typeof factura.dias, 'Días parseados:', dias);
                
                if (dias >= 30) {
                    tr.classList.add('dias-mayor-treinta');
                } else if (dias >= 11) {
                    tr.classList.add('dias-mayor-diez');
                } else if (dias >= 1) {
                    tr.classList.add('dias-mayor-uno');
                }
                
                // Sumar el valor de la factura
                const valorNumerico = parseFloat(factura.valor.replace(/,/g, ''));
                totalCartera += valorNumerico;
                
                carteraTableBody.appendChild(tr);
            });
            
            // Mostrar el total
            const totalCarteraElement = document.getElementById('totalCartera');
            const carteraTableFoot = document.getElementById('carteraTableFoot');
            if (totalCarteraElement && carteraTableFoot) {
                totalCarteraElement.innerHTML = `<strong>$${totalCartera.toLocaleString('es-CO')}</strong>`;
                carteraTableFoot.style.display = 'table-footer-group';
            }
            
            // Comparar con cupo disponible
            const cupoInfo = cuposData.find(c => c.id === cliente.id);
            if (cupoInfo) {
                const cupoDisponible = parseFloat(cupoInfo.cupo.replace(/,/g, ''));
                const sinCupo = totalCartera > cupoDisponible;
                
                // Guardar información para WhatsApp
                clienteSeleccionado.totalCartera = totalCartera;
                clienteSeleccionado.cupoDisponible = cupoDisponible;
                clienteSeleccionado.sinCupo = sinCupo;
                
                console.log('Cliente seleccionado:', clienteSeleccionado);
                console.log('Total cartera:', totalCartera);
                console.log('Cupo disponible:', cupoDisponible);
                console.log('Sin cupo:', sinCupo);
                
                // Mostrar alerta visual si no hay cupo
                if (sinCupo) {
                    clienteCupo.style.color = 'red';
                    clienteCupo.style.fontWeight = 'bold';
                    clienteCupo.innerHTML = `⚠️ SIN CUPO - Cupo: $${cupoDisponible.toLocaleString('es-CO')} | Cartera: $${totalCartera.toLocaleString('es-CO')}`;
                } else {
                    clienteCupo.style.color = 'green';
                    clienteCupo.style.fontWeight = 'normal';
                    clienteCupo.innerHTML = `✅ Con Cupo - Cupo: $${cupoDisponible.toLocaleString('es-CO')} | Cartera: $${totalCartera.toLocaleString('es-CO')}`;
                }
            }
            
            tablaCartera.style.display = 'block';
        } else {
            tablaCartera.style.display = 'none';
        }

        sucursalesContainer.style.display = 'block';
        
        listaSucursales.innerHTML = '';
        if (Array.isArray(cliente.sucursales)) {
            cliente.sucursales.forEach((sucursal) => {
                const li = document.createElement('li');
                li.className = 'sucursal-item';
                li.textContent = `Dirección: ${sucursal.direccion} | Vendedor: ${sucursal.vendedor}`;
                li.onclick = () => seleccionarSucursal(sucursal);
                listaSucursales.appendChild(li);
            });
        } else {
            listaSucursales.innerHTML = '<li>No hay sucursales registradas</li>';
        }
        
        actualizarTextarea();
    }

    // Seleccionar sucursal
    function seleccionarSucursal(sucursal) {
        sucursalSeleccionada = sucursal;
        actualizarTextarea();
    }

    // Actualizar textarea y div de datos
    function actualizarTextarea() {
        const datosDiv = document.getElementById('datosSeleccionados');
        if (clienteSeleccionado && sucursalSeleccionada) {
            // Actualizar textarea
            resultadoTextarea.value = `Cliente: ${clienteSeleccionado.nombre}\nDirección: ${sucursalSeleccionada.direccion}\nVendedor: ${sucursalSeleccionada.vendedor}`;
            
            // Actualizar div de datos
            document.getElementById('clienteNombre').textContent = `Cliente: ${clienteSeleccionado.nombre}`;
            document.getElementById('sucursalDireccion').textContent = `Dirección: ${sucursalSeleccionada.direccion}`;
            document.getElementById('sucursalVendedor').textContent = `Vendedor: ${sucursalSeleccionada.vendedor}`;
            
            // Mostrar div y botón
            datosDiv.style.display = 'block';
            document.getElementById('irAlCarrito').style.display = 'block';
        } else {
            resultadoTextarea.value = 'Selecciona un cliente y una sucursal';
            datosDiv.style.display = 'none';
            document.getElementById('irAlCarrito').style.display = 'none';
        }
    }

    // Event listeners
    if (searchInput) {
        searchInput.addEventListener('input', (e) => {
            buscarClientes(e.target.value);
        });
    }

    // Agregar event listener para el botón
    document.getElementById('irAlCarrito').addEventListener('click', () => {
        if (clienteSeleccionado && sucursalSeleccionada) {
            // Crear objeto con los datos
            const datosCliente = {
                clienteId: clienteSeleccionado.id,
                clienteNombre: clienteSeleccionado.nombre,
                sucursalDireccion: sucursalSeleccionada.direccion,
                sucursalVendedor: sucursalSeleccionada.vendedor,
                totalCartera: clienteSeleccionado.totalCartera || 0,
                cupoDisponible: clienteSeleccionado.cupoDisponible || 0,
                sinCupo: clienteSeleccionado.sinCupo || false
            };
            
            // Guardar datos en localStorage
            localStorage.setItem('datosCliente', JSON.stringify(datosCliente));
            console.log('Datos guardados en localStorage:', datosCliente);
            
            // Redirigir a la página del carrito
            window.location.href = '/carrito';
        }
    });
</script>

<style>
    .cliente-selector {
        max-width: 600px;
        margin: 0 auto;
        padding: 20px;
    }

    .input-busqueda {
        width: 100%;
        padding: 8px;
        margin-bottom: 15px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .lista-clientes, .lista-sucursales {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .cliente-item, .sucursal-item {
        padding: 10px;
        border: 1px solid #ddd;
        margin-bottom: 5px;
        cursor: pointer;
        border-radius: 4px;
    }

    .cliente-item:hover, .sucursal-item:hover {
        background-color: #f5f5f5;
    }

    .textarea-resultado {
        width: 100%;
        margin-top: 15px;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 4px;
        resize: none;
    }

    .sucursales {
        margin-top: 20px;
    }

    .boton-carrito {
        display: block;
        width: 100%;
        padding: 10px;
        margin-top: 15px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
    }

    .boton-carrito:hover {
        background-color: #45a049;
    }

    .datos-seleccionados {
        background-color: #f8f9fa;
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 15px;
        margin: 15px 0;
    }

    .datos-seleccionados h4 {
        margin: 0 0 10px 0;
        color: #333;
    }

    .datos-seleccionados p {
        margin: 5px 0;
        color: #666;
    }

    .cupo-cliente {
        font-size: 1.1em;
        color: olive;
        font-weight: bold;
        margin: 10px 0;
        padding: 5px;
        background-color: #f8f9fa;
        border-radius: 4px;
    }
</style>

<style>
    .tabla-cartera {
        margin: 20px 0;
        overflow-x: auto;
    }

    .tabla-cartera table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
    }

    .tabla-cartera th,
    .tabla-cartera td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: left;
    }

    .tabla-cartera th {
        background-color: #f4f4f4;
    }

    .tabla-cartera tr:nth-child(even) {
        background-color: #f9f9f9;
    }

    .tabla-cartera tr:hover {
        background-color: #f5f5f5;
    }

    /* Días >= 1: Amarillo */
    .tabla-cartera tr.dias-mayor-uno {
        background-color: #fff3cd !important;
    }

    .tabla-cartera tr.dias-mayor-uno:hover {
        background-color: #ffeaa7 !important;
    }

    /* Días >= 11: Rojo */
    .tabla-cartera tr.dias-mayor-diez {
        background-color: #f8d7da !important;
    }

    .tabla-cartera tr.dias-mayor-diez:hover {
        background-color: #f5c6cb !important;
    }

    /* Días >= 30: Rojo intenso */
    .tabla-cartera tr.dias-mayor-treinta {
        background-color: #dc3545 !important;
        color: white !important;
    }

    .tabla-cartera tr.dias-mayor-treinta:hover {
        background-color: #c82333 !important;
        color: white !important;
    }

    /* Estilos para el pie de tabla con el total */
    .tabla-cartera tfoot {
        background-color: #f8f9fa;
        border-top: 2px solid #dee2e6;
    }

    .tabla-cartera tfoot td {
        font-weight: bold;
        text-align: right;
        padding: 12px 8px;
    }

    .tabla-cartera tfoot td:first-child {
        text-align: left;
    }
</style>

<script id="clientes-data" type="application/json">
    {JSON.stringify(clientes)}
</script>